source("~/Desktop/researchProject/integration/readmes/integrated_visualisation.R", echo=TRUE)
source("~/Desktop/researchProject/integration/readmes/integrated_visualisation.R", echo=TRUE)
getwd()
source("~/Desktop/researchProject/integration/readmes/integrated_visualisation.R", echo=TRUE)
p1_time <- DimPlot(
obj,
reduction = "umap.cca",
group.by = c("time"),
combine = FALSE, label.size = 2
)
p1_time
View(p1_time)
merged_obj = readRDS("merged_object_pca.rds")
merged_obj = readRDS("/Users/mayongzhi/Desktop/researchProject/integration/outputs/merged_object_pca.rds")
View(merged_obj)
merged_obj <- FindNeighbors(merged_obj,reduction = "pca", dims = 1:50)
View(merged_obj)
View(obj)
merged_obj <- FindClusters(merged_obj, resolution = 1, cluster.name = "pca_clusters")
merged_obj <- RunUMAP(merged_obj, reduction = "pca", dims = 1:50, reduction.name = "umap.pca")
p1_merged_time <- DimPlot(
merged_obj,
reduction = "umap.pca",
group.by = c("time"),
combine = FALSE, label.size = 2
)
p1_time
p1_days
obj$days
count(obj$days)
??count
table(obj$days)
knitr::opts_chunk$set(echo = TRUE)
library(Seurat)
library(tidyverse)
library(patchwork)
# Increase the memory
mem.maxVSize(vsize = 60000)
# Load 4-6 weeks Seurat object
load("/Users/mayongzhi/Desktop/researchProject/integration/originals/human4_6W.RData")
ls()
# Load 7-11 weeks Seurat object
load("/Users/mayongzhi/Desktop/researchProject/integration/originals/human7_11W.RData")
ls()
human7_11W <- seurat
rm(seurat)
# Load 12-20 weeks Seurat object
load("/Users/mayongzhi/Desktop/researchProject/integration/originals/human12_20W.RData")
ls()
human12_20W <- humanpancreas.combined.sct
rm(humanpancreas.combined.sct)
ls()
View(human12_20W)
View(human4_6W)
View(human7_11W)
p <- VlnPlot(human4_6W, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"),
ncol = 3, group.by = "days", pt.size = 0)
# Apply boxplot to each plot separately
p <- lapply(p, function(x) x + geom_boxplot(width = 0.1, outlier.shape = NA))
# Print the updated plots
patchwork::wrap_plots(p, ncol = 3) + theme_minimal()
# Reorder the 'days' variable to follow the desired order
human7_11W$days <- factor(human7_11W$days, levels = c("W7", "W8", "W9", "W10", "W11"))
p <- VlnPlot(human7_11W, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"),
ncol = 3, group.by = "days", pt.size = 0)
# Apply boxplot to each plot separately
p <- lapply(p, function(x) x + geom_boxplot(width = 0.1, outlier.shape = NA))
# Print the updated plots
patchwork::wrap_plots(p, ncol = 3) + theme_minimal()
# Add a column "time" to mark object source for integration
#human7_11W$time <- "7_11"
human12_20W<- subset(human12_20W, subset = nCount_RNA > 500 & nFeature_RNA > 250 & log10GenesPerUMI > 0.75 & percent.mt < 25)
p <- VlnPlot(human12_20W, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"),
ncol = 3, group.by = "Gestation_Age", pt.size = 0)
# Apply boxplot to each plot separately
p <- lapply(p, function(x) x + geom_boxplot(width = 0.1, outlier.shape = NA))
# Print the updated plots
patchwork::wrap_plots(p, ncol = 3) + theme_minimal()
# Add a column "time" to mark object source for integration
#human12_20W$time <- "12_20"
print("human4_6W")
print(paste("Number of genes:", dim(human4_6W)[1], "; Number of cells:", dim(human4_6W)[2]))
print("human7_11W")
print(paste("Number of genes:", dim(human7_11W)[1], "; Number of cells:", dim(human7_11W)[2]))
print("human12_20W")
print(paste("Number of genes:", dim(human12_20W)[1], "; Number of cells:", dim(human12_20W)[2]))
human12_20W@meta.data$Gestation_Age
table(human12_20W@meta.data$Gestation_Age)
table(human12_20W@meta.data$Gestation_Age)
human12_20W@meta.data$Gestation_Age[human12_20W@meta.data$Gestation_Age == "13PCW_1"] <- "13PCW"
library(dplyr)
# Modify the "Gestation_Age" column in metadata
human12_20W@meta.data$Gestation_Age <- human12_20W@meta.data$Gestation_Age %>%
as.character() %>%  # Ensure it's a character vector
gsub("PCW", "", .) %>%  # Remove "PCW"
paste0("W", .)  # Add "W" at the beginning
# Convert to a factor with a specific order
human12_20W@meta.data$Gestation_Age <- factor(human12_20W@meta.data$Gestation_Age,
levels = c("W12", "W13", "W13_1", "W14",
"W15", "W18", "W19", "W20"))
# Set the new identity
Idents(human12_20W) <- human12_20W@meta.data$Gestation_Age
# Rename "Gestation_Age" with "days"
colnames(human12_20W@meta.data)[colnames(human12_20W@meta.data) == "Gestation_Age"] <- "days"
twelve_twenty <- RunPCA(human12_20W, verbose = FALSE)
four_six <- RunPCA(human4_6W, verbose = FALSE)
four_six <- RunUMAP(human4_6W, dims = 1:50, verbose = FALSE)
four_six <- FindNeighbors(human4_6W, dims = 1:50, verbose = FALSE)
four_six <- FindClusters(human4_6W, verbose = FALSE)
DimPlot(four_six, label = TRUE) + ggtitle("UMAP for human4_6W")
ggsave("../outputs/unintegrated_figure/UMAP4_6W.png",
plot = DimPlot(four_six, label = TRUE) + ggtitle("UMAP for human4_6W"),
width = 8, height = 6, dpi = 300)
DimPlot(four_six, label = TRUE) + ggtitle("UMAP for human4_6W")
seven_eleven <- RunPCA(human7_11W, verbose = FALSE)
seven_eleven <- RunUMAP(human7_11W, dims = 1:50, verbose = FALSE)
seven_eleven <- FindNeighbors(human7_11W, dims = 1:50, verbose = FALSE)
seven_eleven <- FindClusters(human7_11W, verbose = FALSE)
ggsave("../outputs/UMAP7_11W.png",
plot = DimPlot(seven_eleven, label = TRUE) + ggtitle("UMAP for human7_11W"),
width = 8, height = 6, dpi = 300)
DimPlot(seven_eleven, label = TRUE)+ ggtitle("UMAP for human7_11W")
seven_eleven <- RunPCA(human7_11W, verbose = FALSE)
seven_eleven <- RunUMAP(human7_11W, dims = 1:50, verbose = FALSE)
seven_eleven <- FindNeighbors(human7_11W, dims = 1:50, verbose = FALSE)
seven_eleven <- FindClusters(human7_11W, verbose = FALSE)
ggsave("../outputs/unintegrated_figure/UMAP7_11W.png",
plot = DimPlot(seven_eleven, label = TRUE) + ggtitle("UMAP for human7_11W"),
width = 8, height = 6, dpi = 300)
DimPlot(seven_eleven, label = TRUE)+ ggtitle("UMAP for human7_11W")
twelve_twenty <- RunPCA(human12_20W, verbose = FALSE)
twelve_twenty <- RunUMAP(human12_20W, dims = 1:20, verbose = FALSE)
twelve_twenty <- FindNeighbors(human12_20W, dims = 1:20, verbose = FALSE)
twelve_twenty <- FindClusters(human12_20W, verbose = FALSE)
ggsave("../outputs/unintegrated_figure/UMAP12_20W.png",
plot = DimPlot(twelve_twenty, label = TRUE) + ggtitle("UMAP for human12_20W"),
width = 8, height = 6, dpi = 300)
DimPlot(twelve_twenty, label = TRUE)+ ggtitle("UMAP for human12_20W")
human4_6W$time <- "4_6"
# Add a column "time" to mark object source for integration
human7_11W$time <- "7_11"
# Add a column "time" to mark object source for integration
human12_20W$time <- "12_20"
# Print the updated plots
patchwork::wrap_plots(p, ncol = 3) + theme_minimal()
library(dplyr)
# Modify the "Gestation_Age" column in metadata
human12_20W@meta.data$Gestation_Age <- human12_20W@meta.data$Gestation_Age %>%
as.character() %>%  # Ensure it's a character vector
gsub("PCW", "", .) %>%  # Remove "PCW"
paste0("W", .)  # Add "W" at the beginning
# Convert to a factor with a specific order
human12_20W@meta.data$Gestation_Age <- factor(human12_20W@meta.data$Gestation_Age,
levels = c("W12", "W13", "W14",
"W15", "W18", "W19", "W20"))
# Set the new identity
Idents(human12_20W) <- human12_20W@meta.data$Gestation_Age
# Rename "Gestation_Age" with "days"
colnames(human12_20W@meta.data)[colnames(human12_20W@meta.data) == "Gestation_Age"] <- "days"
getwd()
library(ggplot2)
# Merge the Seurat objects
merged_object <- merge(x = human4_6W, y=list(human7_11W, human12_20W))
saveRDS(merged_object_13, file = "../outputs/merged_object_13.rds")
saveRDS(merged_object, file = "../outputs/merged_object_13.rds")
# Convert to a factor with a specific order
merged_object@meta.data$days <- factor(merged_object@meta.data$days,
levels = c("W4", "W5", "W6",
"W7", "W8", "W9", "W10", "W11",
"W12", "W13", "W14", "W15", "W18", "W19", "W20"))
# Plot violin plots
p <- VlnPlot(merged_object, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"),
ncol = 1, group.by = "days", pt.size = 0)
# Convert to list and apply boxplot separately
plots <- lapply(p, function(x) x + geom_boxplot(width = 0.1, outlier.shape = NA, show.legend = FALSE))
ggsave(filename = paste0("../outputs/unintegrated_figure/plot_", i, ".png"), plot = plots[[i]], width = 8, height = 6, dpi = 300)
# Save the plots
for (i in seq_along(plots)) {
ggsave(filename = paste0("../outputs/unintegrated_figure/plot_", i, ".png"), plot = plots[[i]], width = 8, height = 6, dpi = 300)
}
plots
# Reorder the time in merged_object
merged_object$time <- factor(merged_object$time, levels = c("4_6", "7_11", "12_20"))
# Plot
plot <- merged_object@meta.data %>%
ggplot(aes(x=time, fill=time)) +
geom_bar(color="black") +
stat_count(geom = "text", colour = "black", size = 3.5,
aes(label = ..count..),
position=position_stack(vjust=0.5))+
theme_classic() +
theme(plot.title = element_text(hjust=0.5, face="bold")) +
ggtitle("Number of Cells per Period")
# Save the plot
ggsave("../outputs/nCellsPeriod.png", plot = plot,
width = 8, height = 6, dpi = 300)
plot
# Save the plot
ggsave("../outputs/unintegrated_figure/nCellsPeriod.png", plot = plot,
width = 8, height = 6, dpi = 300)
plot
# Plot
plot <- merged_object@meta.data %>%
ggplot(aes(x=days, fill=days)) +
geom_bar(color="black") +
stat_count(geom = "text", colour = "black", size = 3.5,
aes(label = ..count..),
position=position_stack(vjust=0.5), angle = 90)+
theme_classic() +
theme(plot.title = element_text(hjust=0.5, face="bold")) +
ggtitle("Number of Cells per Week")
# Save the plot
ggsave("../outputs/unintegrated_figure/nCellsWeek.png", plot = plot,
width = 8, height = 6, dpi = 300)
plot
p <- merged_object@meta.data %>%
ggplot(aes(color=time, x=nCount_RNA, fill= time)) +
geom_density(alpha = 0.2) +
theme_classic() +
scale_x_log10()
ggsave("../outputs/unintegrated_figure/den_C.png", plot = p, width = 8, height = 6, dpi = 300 )
p
p <- merged_object@meta.data %>%
ggplot(aes(color=time, x=nFeature_RNA, fill= time)) +
geom_density(alpha = 0.2) +
theme_classic() +
scale_x_log10()
ggsave("../outputs/unintegrated_figure/den_F.png", plot = p, width = 8, height = 6, dpi = 300 )
p
p <- merged_object@meta.data %>%
ggplot(aes(color=time, x=percent.mt, fill= time)) +
geom_density(alpha = 0.2) +
theme_classic() +
scale_x_log10()
# geom_density: creaty a density plot. alpha = transparency
# scale_x_log10: Transforms the x-axis to a logarithmic scale (base 10), so the large values are compressed. Good for visualizing skewed data
ggsave("../outputs/unintegrated_figure/den_mt.png", plot = p, width = 8, height = 6, dpi = 300 )
p
p <- FeatureScatter(merged_object, feature1 = "percent.mt", feature2 ="nFeature_RNA" , group.by="orig.ident",split.by="time", ncol = 3)
ggsave("../outputs/unintegrated_figure/FeaSca_mtF.png",
plot = p,
width = 12, height = 6, dpi = 300)
p
p <- FeatureScatter(merged_object, feature1 = "percent.mt", feature2 ="nFeature_RNA" , group.by="days",split.by="time", ncol = 3)
ggsave("../outputs/unintegrated_figure/FeaSca_mtF_days.png",
plot = p,
width = 12, height = 6, dpi = 300)
p
p <- FeatureScatter(merged_object, feature1 = "nCount_RNA", feature2 ="nFeature_RNA" , group.by="orig.ident",split.by="time", ncol = 3)
p <- p + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("../outputs/unintegrated_figure/FeaSca_CF.png",
plot = p,
width = 12, height = 6, dpi = 300)
p
p <- FeatureScatter(merged_object, feature1 = "nCount_RNA", feature2 ="nFeature_RNA" , group.by="days",split.by="time", ncol = 3)
p <- p + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("../outputs/unintegrated_figure/FeaSca_CF_day.png",
plot = p,
width = 12, height = 6, dpi = 300)
p
d2_tag <-readRDS("/Users/mayongzhi/Desktop/researchProject/ScaleRNA_data/individual samples/cellTyping/CellTag-D2.ScaleRNA/CellTag-D2.ScaleRNA_bpcells/")
library(Seurat)
d2_tag <-readRDS("/Users/mayongzhi/Desktop/researchProject/ScaleRNA_data/individual samples/cellTyping/CellTag-D2.ScaleRNA/CellTag-D2.ScaleRNA_bpcells/")
d2_tag <-readRDS("/Users/mayongzhi/Desktop/researchProject/ScaleRNA_data/individual samples/cellTyping/CellTag-D2.ScaleRNA/CellTag-D2.ScaleRNA_bpcells/CellTag-D2.ScaleRNA_SeuratObject.rds")
??readRDS
d2_tag <-load("/Users/mayongzhi/Desktop/researchProject/ScaleRNA_data/individual samples/cellTyping/CellTag-D2.ScaleRNA/CellTag-D2.ScaleRNA_bpcells/CellTag-D2.ScaleRNA_SeuratObject.rds")
load("/Users/mayongzhi/Desktop/researchProject/ScaleRNA_data/individual samples/cellTyping/CellTag-D2.ScaleRNA/CellTag-D2.ScaleRNA_bpcells/CellTag-D2.ScaleRNA_SeuratObject.rds")
file.exists("/Users/mayongzhi/Desktop/researchProject/ScaleRNA_data/individual samples/cellTyping/CellTag-D2.ScaleRNA/CellTag-D2.ScaleRNA_bpcells/CellTag-D2.ScaleRNA_SeuratObject.rds")
load("/Users/mayongzhi/Desktop/researchProject/ScaleRNA_data/individual samples/cellTyping/CellTag-D2.ScaleRNA/CellTag-D2.ScaleRNA_SeuratObject.rds")
d2_tag <- readRDS("/Users/mayongzhi/Desktop/researchProject/ScaleRNA_data/individual samples/cellTyping/CellTag-D2.ScaleRNA/CellTag-D2.ScaleRNA_SeuratObject.rds")
d2_tag
View(d2_tag)
view(d2_tag@meta.data)
d4_tag <- readRDS("/Users/mayongzhi/Desktop/researchProject/ScaleRNA_data/individual samples/cellTyping/CellTag-D6.ScaleRNA/CellTag-D6.ScaleRNA_SeuratObject.rds")
d6_tag <- readRDS("/Users/mayongzhi/Desktop/researchProject/ScaleRNA_data/individual samples/cellTyping/CellTag-D6.ScaleRNA/CellTag-D6.ScaleRNA_SeuratObject.rds")
d6_tag
library(glue)
for (i in c(2, 6, 8, 10)) {
path <- glue("/Users/mayongzhi/Desktop/researchProject/ScaleRNA_data/individual samples/cellTyping/CellTag-D{i}.ScaleRNA/CellTag-D{i}.ScaleRNA_SeuratObject.rds")
obj <- readRDS(path)
assign(glue("d{i}_tag"), obj)
}
d2_tag
d6_tag
d8_tag
d10_tag
# import the celltagged undifferentiated Seurat objects
control <- readRDS("/Users/mayongzhi/Desktop/researchProject/ScaleRNA_data/individual samples/cellTyping/CellTag-iPSCs-Frozen.ScaleRNA/CellTag-iPSCs-Frozen.ScaleRNA_SeuratObject.rds")
control
